// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: player/playerpb/player.proto

package playerpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_playerpb_player_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_player_playerpb_player_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_player_playerpb_player_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_playerpb_player_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_player_playerpb_player_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_player_playerpb_player_proto_rawDescGZIP(), []int{1}
}

func (x *Response) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

var File_player_playerpb_player_proto protoreflect.FileDescriptor

var file_player_playerpb_player_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x70,
	0x62, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x25, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x32, 0x42, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x12, 0x0f, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x10, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x13, 0x5a, 0x11, 0x2e, 0x2f, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_player_playerpb_player_proto_rawDescOnce sync.Once
	file_player_playerpb_player_proto_rawDescData = file_player_playerpb_player_proto_rawDesc
)

func file_player_playerpb_player_proto_rawDescGZIP() []byte {
	file_player_playerpb_player_proto_rawDescOnce.Do(func() {
		file_player_playerpb_player_proto_rawDescData = protoimpl.X.CompressGZIP(file_player_playerpb_player_proto_rawDescData)
	})
	return file_player_playerpb_player_proto_rawDescData
}

var file_player_playerpb_player_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_player_playerpb_player_proto_goTypes = []interface{}{
	(*Request)(nil),  // 0: player.Request
	(*Response)(nil), // 1: player.Response
}
var file_player_playerpb_player_proto_depIdxs = []int32{
	0, // 0: player.PlayerService.GetVideo:input_type -> player.Request
	1, // 1: player.PlayerService.GetVideo:output_type -> player.Response
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_player_playerpb_player_proto_init() }
func file_player_playerpb_player_proto_init() {
	if File_player_playerpb_player_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_player_playerpb_player_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_playerpb_player_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_player_playerpb_player_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_player_playerpb_player_proto_goTypes,
		DependencyIndexes: file_player_playerpb_player_proto_depIdxs,
		MessageInfos:      file_player_playerpb_player_proto_msgTypes,
	}.Build()
	File_player_playerpb_player_proto = out.File
	file_player_playerpb_player_proto_rawDesc = nil
	file_player_playerpb_player_proto_goTypes = nil
	file_player_playerpb_player_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PlayerServiceClient is the client API for PlayerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlayerServiceClient interface {
	GetVideo(ctx context.Context, in *Request, opts ...grpc.CallOption) (PlayerService_GetVideoClient, error)
}

type playerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPlayerServiceClient(cc grpc.ClientConnInterface) PlayerServiceClient {
	return &playerServiceClient{cc}
}

func (c *playerServiceClient) GetVideo(ctx context.Context, in *Request, opts ...grpc.CallOption) (PlayerService_GetVideoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PlayerService_serviceDesc.Streams[0], "/player.PlayerService/GetVideo", opts...)
	if err != nil {
		return nil, err
	}
	x := &playerServiceGetVideoClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PlayerService_GetVideoClient interface {
	Recv() (*Response, error)
	grpc.ClientStream
}

type playerServiceGetVideoClient struct {
	grpc.ClientStream
}

func (x *playerServiceGetVideoClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PlayerServiceServer is the server API for PlayerService service.
type PlayerServiceServer interface {
	GetVideo(*Request, PlayerService_GetVideoServer) error
}

// UnimplementedPlayerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPlayerServiceServer struct {
}

func (*UnimplementedPlayerServiceServer) GetVideo(*Request, PlayerService_GetVideoServer) error {
	return status.Errorf(codes.Unimplemented, "method GetVideo not implemented")
}

func RegisterPlayerServiceServer(s *grpc.Server, srv PlayerServiceServer) {
	s.RegisterService(&_PlayerService_serviceDesc, srv)
}

func _PlayerService_GetVideo_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PlayerServiceServer).GetVideo(m, &playerServiceGetVideoServer{stream})
}

type PlayerService_GetVideoServer interface {
	Send(*Response) error
	grpc.ServerStream
}

type playerServiceGetVideoServer struct {
	grpc.ServerStream
}

func (x *playerServiceGetVideoServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

var _PlayerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "player.PlayerService",
	HandlerType: (*PlayerServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetVideo",
			Handler:       _PlayerService_GetVideo_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "player/playerpb/player.proto",
}
